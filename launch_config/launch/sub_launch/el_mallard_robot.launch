<?xml version="1.0"?>
<launch>
    <!-- Get MALLARD_VERSION. -->
    <!-- used to choose the yaml file -->
    <arg name="ARG_MALLARD_VERSION" value="$(optenv MALLARD_VERSION 001_EL)" />
    <!-- Get MALLARD_AUTONOMOUS. 1: Autonomous Mode. 0: Manual Mode. -->
    <arg name="ARG_MALLARD_AUTONOMOUS" value="$(optenv MALLARD_AUTONOMOUS 0)" />

    <!-- Connect to ps4 controller, and publish button presses -->
    <node pkg="rosserial_python" type="serial_node.py" name="rosserialvl">
        <param name="port" value="/dev/ttyUSB0" />
    </node>

    <node pkg="el_mallard" type="han_code.py" name="han_node" output="screen">
        <rosparam file="$(find launch_config)/$(arg ARG_MALLARD_VERSION)/cfg/yaml/$(arg ARG_MALLARD_VERSION).yaml" command="load"/>
    </node>
    

    <!-- El-MallARD Autonomous Mode -->
    <group if="$(arg ARG_MALLARD_AUTONOMOUS)">
        <!-- Lidar -->
        <include file="$(find launch_config)/launch/sub_launch/el_mallard_lidar_hector.launch"/>


        <!-- local planner -->
        <node pkg="mallard_autonomy" type="local_planner_cls.py" name="local_planner" output="screen"/>

        <!-- trajectory tracking conroller -->
        <node pkg="mallard_autonomy" type="traj_control.py" name="trajectory_control" output="screen">
            <rosparam file="$(find launch_config)/$(arg ARG_MALLARD_VERSION)/cfg/yaml/$(arg ARG_MALLARD_VERSION).yaml" command="load"/>
        </node>

        <!-- Use markers to control where the robot goes -->
        <node pkg="mallard_autonomy" type="coverage_selection.py" name="areaSelectionMarkers" output="screen"/>

        <!-- launch the dynamic reconfigure -->
        <!-- <node pkg="rqt_reconfigure" type="rqt_reconfigure" name="rqt_reconfigure" /> -->
    </group>


</launch>
